<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.lunifera.vaadin.e4</groupId>
	<artifactId>com.lunifera.vaadin.e4</artifactId>
	<version>0.5.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<properties>
		<osbp.deployment.p2.name>vaaclipse</osbp.deployment.p2.name>
		<osbp.build.p2.project.name>org.eclipse.osbp.vaaclipse.p2</osbp.build.p2.project.name>
		<vaaclipse-version>0.9.0-SNAPSHOT</vaaclipse-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<vaadin.version>7.6.8</vaadin.version>
		<vaadin.plugin.version>7.6.8</vaadin.plugin.version>
        <tycho-version>0.25.0</tycho-version>
        <tychoExtrasVersion>0.25.0</tychoExtrasVersion>
        <groovy-all.version>1.5.7</groovy-all.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <troja.developer.home>/tmp/troja/dev</troja.developer.home>
        <troja.developer.home.repositories>${troja.developer.home}${file.separator}p2${file.separator}</troja.developer.home.repositories>
        <troja.federated.repository.label>troja</troja.federated.repository.label>
        <troja.build.local.federated.p2.dir>/tmp/troja/dev/p2</troja.build.local.federated.p2.dir>
     	<troja.build.eclipse.platform.name>neon</troja.build.eclipse.platform.name>
     	<troja.build.branch>development</troja.build.branch>
     	<troja.stage.p2.label>vaaclipse</troja.stage.p2.label>
     	<troja.stage.p2.keep.old>false</troja.stage.p2.keep.old>
     	<troja.stage.artifact.version>0.9.0.qualifier</troja.stage.artifact.version>
     	<encoded.p2index>dmVyc2lvbiA9IDEKIG1ldGFkYXRhLnJlcG9zaXRvcnkuZmFjdG9yeS5vcmRlciA9IGNvbXBvc2l0ZUNvbnRlbnQueG1sLFwhCiBhcnRpZmFjdC5yZXBvc2l0b3J5LmZhY3Rvcnkub3JkZXIgPSBjb21wb3NpdGVBcnRpZmFjdHMueG1sLFwh</encoded.p2index>
        <encoded.compositeArtifacts>PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4NCjw/Y29tcG9zaXRlQXJ0aWZhY3RSZXBvc2l0b3J5IHZlcnNpb249JzEuMC4wJz8+DQo8cmVwb3NpdG9yeSBuYW1lPSdPUy5iZWUgUHVibGljIFAyIFJlcG9zaXRvcnknIHR5cGU9J29yZy5lY2xpcHNlLmVxdWlub3guaW50ZXJuYWwucDIuYXJ0aWZhY3QucmVwb3NpdG9yeS5Db21wb3NpdGVBcnRpZmFjdFJlcG9zaXRvcnknIHZlcnNpb249JzEuMC4wJz4NCiAgPHByb3BlcnRpZXMgc2l6ZT0nMSc+DQoJPHByb3BlcnR5IG5hbWU9J3AyLnRpbWVzdGFtcCcgdmFsdWU9JzEyNDM4MjI1MDI0NDAnLz4NCiAgPC9wcm9wZXJ0aWVzPg0KICA8Y2hpbGRyZW4gc2l6ZT0nMCc+CQ0KICA8L2NoaWxkcmVuPg0KPC9yZXBvc2l0b3J5Pg==</encoded.compositeArtifacts>
        <encoded.compositeContent>PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4NCjw/Y29tcG9zaXRlTWV0YWRhdGFSZXBvc2l0b3J5IHZlcnNpb249JzEuMC4wJz8+DQo8cmVwb3NpdG9yeSBuYW1lPSdPUy5iZWUgUHVibGljIFAyIFJlcG9zaXRvcnknIHR5cGU9J29yZy5lY2xpcHNlLmVxdWlub3guaW50ZXJuYWwucDIubWV0YWRhdGEucmVwb3NpdG9yeS5Db21wb3NpdGVNZXRhZGF0YVJlcG9zaXRvcnknIHZlcnNpb249JzEuMC4wJz4NCiAgPHByb3BlcnRpZXMgc2l6ZT0nMSc+DQoJPHByb3BlcnR5IG5hbWU9J3AyLnRpbWVzdGFtcCcgdmFsdWU9JzEyNDM4MjI1MDI0OTknLz4NCiAgPC9wcm9wZXJ0aWVzPg0KICA8Y2hpbGRyZW4gc2l6ZT0nMCc+DQogIDwvY2hpbGRyZW4+DQo8L3JlcG9zaXRvcnk+</encoded.compositeContent>
	</properties>


	<modules>
		<!-- Bundles -->
<!-- 		<module>org.eclipse.osbp.vaaclipse.target.luna</module> -->

		<module>org.eclipse.osbp.vaaclipse.ui.preferences.addon</module>
		<module>org.eclipse.osbp.vaaclipse.ui.preferences.model</module>

	</modules>

	<repositories>
			<repository>
    				<id>dependency-p2</id>
    				<url>file:///tmp/troja/dev/p2/troja/neon/development/troja/0.5.0.qualifier</url>
    				<layout>p2</layout>
    			</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
		<repository>
			<id>eclipse-neon</id>
			<url>http://download.eclipse.org/releases/neon</url>
			<layout>p2</layout>
		</repository>
		<repository>
			<id>eclipse-platform</id>
			<url>http://download.eclipse.org/eclipse/updates/4.6</url>
			<layout>p2</layout>
		</repository>
		<repository>
			<id>lunifera-nexus-snapshots</id>
			<name>Lunifera Nexus Snapshots</name>
			<url>http://maven.lunifera.org:8086/nexus/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<updatePolicy>always</updatePolicy>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	
	<pluginRepositories>
    	<pluginRepository>
	    		<id>pentaho-releases</id>
    			<url>http://repository.pentaho.org/artifactory/repo/</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-shared</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			<version>${vaadin.version}</version>
		</dependency>
	</dependencies>
	
	<build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.tycho</groupId>
                        <artifactId>tycho-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.eclipse.tycho</groupId>
                        <artifactId>tycho-compiler-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.eclipse.tycho</groupId>
                        <artifactId>tycho-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.eclipse.tycho</groupId>
                        <artifactId>target-platform-configuration</artifactId>
                    </plugin>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>xtend-gen</directory>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                </plugins>
                
                <pluginManagement>
                    <plugins>
                        <!-- enable tycho build -->
                        <plugin>
                            <groupId>org.eclipse.tycho</groupId>
                            <artifactId>tycho-maven-plugin</artifactId>
                            <version>${tycho-version}</version>
                            <extensions>true</extensions>
                            <configuration>
                                <localArtifacts>ignore</localArtifacts>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.eclipse.tycho</groupId>
                            <artifactId>tycho-compiler-plugin</artifactId>
                            <version>${tycho-version}</version>
                            <configuration>
                                <compilerVersion>1.8</compilerVersion>
                                <encoding>UTF-8</encoding>
                                <source>1.8</source>
                                <target>1.8</target>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.eclipse.tycho</groupId>
                            <artifactId>tycho-source-plugin</artifactId>
                            <version>${tycho-version}</version>
                            <executions>
                                <execution>
                                    <id>plugin-source</id>
                                    <goals>
                                        <goal>plugin-source</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.eclipse.tycho</groupId>
                            <artifactId>target-platform-configuration</artifactId>
                            <version>${tycho-version}</version>
                            <configuration>
                                <resolver>p2</resolver>
                                <pomDependencies>consider</pomDependencies>
                            </configuration>
                        </plugin>
                        <!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>
                                                    org.apache.maven.plugins
                                                </groupId>
                                                <artifactId>
                                                    maven-antrun-plugin
                                                </artifactId>
                                                <versionRange>
                                                    [1.8,)
                                                </versionRange>
                                                <goals>
                                                    <goal>run</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore></ignore>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>

    <profiles>
    	<profile>
    		<id>use.dependency.p2</id>
    		<activation>
                <property>
                    <name>troja.use.dependency.p2</name>
                </property>
    		</activation>
    		<repositories>
    			<repository>
    				<id>dependency-p2</id>
    				<url>file:///tmp/troja/dev/p2/troja/neon/development/troja/0.5.0.qualifier</url>
    				<layout>p2</layout>
    			</repository>
    		</repositories>
    	</profile>
        <profile>
            <id>stage.p2</id>
            <activation>
                <file>
                    <exists>.troja.releng.eclipse.p2</exists>
                </file>
            </activation>
            <properties>
                <troja.stage.p2.log.file.path>${basedir}${file.separator}build.${troja.stage.p2.label}.${troja.build.eclipse.platform.name}.${troja.build.branch}.log.properties</troja.stage.p2.log.file.path>
                <troja.stage.p2.origin.dir>${project.build.directory}${file.separator}repository</troja.stage.p2.origin.dir>
                <troja.stage.p2.target.dir>${troja.developer.home.repositories}${troja.federated.repository.label}${file.separator}${troja.build.eclipse.platform.name}${file.separator}${troja.build.branch}${file.separator}${troja.stage.p2.label}${file.separator}${troja.stage.artifact.version}</troja.stage.p2.target.dir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <id>generate-files</id>
                                <phase>verify</phase>
                                <configuration>
                                    <quiet>true</quiet>
                                    <target>
                                        <taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy">
                                            <classpath refid="maven.compile.classpath"/>
                                        </taskdef>
                                        <taskdef resource="net/sf/antcontrib/antlib.xml"/>
                                        <taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
                                        <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask"/>
                                        
                                        <echo message="Federated Repository Local Dir (troja.build.local.federated.p2.dir): ${troja.build.local.federated.p2.dir}"/>
                                        <echo message="Platform: ${troja.build.eclipse.platform.name}"/>
                                        <echo message="Build Type: ${troja.build.branch}"/>
                                        <echo message="Repo Name: ${troja.stage.p2.label}"/>
                                        <echo message="Repo Keep Old: ${troja.stage.p2.keep.old}"/>
                                        <echo message="Repo Version: ${troja.stage.artifact.version}"/>
                                        <echo message="Log File (troja.stage.p2.log.file.path): ${troja.stage.p2.log.file.path}"/>
                                        <echo message="P2 Source Dir (troja.stage.p2.origin.dir): ${troja.stage.p2.origin.dir}"/>
                                        <echo message="P2 Target Dir (troja.stage.p2.target.dir): ${troja.stage.p2.target.dir}"/>
                                        
                                        <!-- "init" -->
                                        <fail message="The property 'troja.developer.home' was not defined in settings.xml or in commandline.">
                                            <condition>
                                                <or>
                                                    <not>
                                                        <isset property="troja.developer.home"/>
                                                    </not>
                                                    <equals arg1="${troja.developer.home}" arg2="none"/>
                                                </or>
                                            </condition>
                                        </fail>
                                        <if>
                                            <not>
                                                <available file="${troja.developer.home}" type="dir"/>
                                            </not>
                                            <then>
                                                <mkdir dir="${troja.developer.home}"/>
                                            </then>
                                        </if>
                                        <if>
                                            <not>
                                                <available file="${troja.developer.home.repositories}" type="dir"/>
                                            </not>
                                            <then>
                                                <mkdir dir="${troja.developer.home.repositories}"/>
                                            </then>
                                        </if>
                                        <if>
                                            <not>
                                                <available file="${troja.build.local.federated.p2.dir}" type="dir"/>
                                            </not>
                                            <then>
                                                <mkdir dir="${troja.build.local.federated.p2.dir}"/>
                                            </then>
                                        </if>
                                        <groovy>
                                            ant.echo "Extracted building templates..."
                                            
                                            def
                                            separator =
                                            "${properties['file.separator']}"
                                            def directory =
                                            "${properties['project.build.directory']}" + separator +
                                            "templates" + separator
                                            
                                            new
                                            File(directory).mkdir()
                                            
                                            def
                                            encodedP2index =
                                            "${properties['encoded.p2index']}"
                                            def
                                            encodedCompositeArtifacts =
                                            "${properties['encoded.compositeArtifacts']}"
                                            def
                                            encodedCompositeContent =
                                            "${properties['encoded.compositeContent']}"
                                            
                                            properties.p2indexFile = directory + "p2.index"
                                            properties.compositeArtifactsFile = directory +
                                            "compositeArtifacts.xml"
                                            properties.compositeContentFile =
                                            directory + "compositeContent.xml"
                                            
                                            new
                                            FileOutputStream(properties.p2indexFile).write(encodedP2index.decodeBase64())
                                            new
                                            FileOutputStream(properties.compositeArtifactsFile).write(encodedCompositeArtifacts.decodeBase64())
                                            new
                                            FileOutputStream(properties.compositeContentFile).write(encodedCompositeContent.decodeBase64())
                                            
                                        </groovy>
                                        <echo message="** troja User Developer Home: ${troja.developer.home}"/>
                                        <echo message=" - index source: ${p2indexFile}"/>
                                        <echo message=" - contentFile source: ${compositeContentFile}"/>
                                        <echo message=" - artifactsFile source: ${compositeArtifactsFile}"/>
                                        
                                        <!-- generate.composite.p2.init -->
                                        
                                        <fail message="Could not find p2.index template at ${p2indexFile} !">
                                            <condition>
                                                <not>
                                                    <available file="${p2indexFile}" type="file"/>
                                                </not>
                                            </condition>
                                        </fail>
                                        
                                        <fail message="Could not find compositeContent.xml template at ${compositeContentFile} !">
                                            <condition>
                                                <not>
                                                    <available file="${compositeContentFile}" type="file"/>
                                                </not>
                                            </condition>
                                        </fail>
                                        
                                        <fail message="Could not find compositeArtifacts.xml template at ${compositeArtifactsFile} !">
                                            <condition>
                                                <not>
                                                    <available file="${compositeArtifactsFile}" type="file"/>
                                                </not>
                                            </condition>
                                        </fail>
                                        
                                        <!-- "deploy.generated.p2.to.composite.dir.init" -->
                                        <echo message="Copying repo to Federated Repository !!!"/>
                                        <echo message="Checking existence of log file at:'${troja.stage.p2.log.file.path}'"/>
                                        <if>
                                            <available file="${troja.stage.p2.log.file.path}" type="file"/>
                                            <then>
                                                <echo message="OPEN BUILD LOG"/>
                                                <property file="${troja.stage.p2.log.file.path}" prefix="old"/>
                                                <echoproperties prefix="old."/>
                                            </then>
                                            <else>
                                                <echo message="Log file was not found at: '${troja.stage.p2.log.file.path}'"/>
                                            </else>
                                        </if>
                                        
                                        <!-- deploy.generated.p2.to.composite.dir.clean -->
                                        <!-- remove the latest built repository directory -->
                                        <if>
                                            <equals arg1="${troja.stage.p2.keep.old}" arg2="false"/>
                                            <then>
                                                <echo message="Checking property 'old.troja.stage.p2.target.dir'"/>
                                                <if>
                                                    <isset property="old.troja.stage.p2.target.dir"/>
                                                    <then>
                                                        <if>
                                                            <available file="${old.troja.stage.p2.target.dir}" type="dir"/>
                                                            <then>
                                                                <echo message="REMOVING OLD BUILDS at:'${old.troja.stage.p2.target.dir}/..'"/>
                                                                <delete includeemptydirs="true" failonerror="false">
                                                                    <fileset includes="**/*" dir="${old.troja.stage.p2.target.dir}/.."/>
                                                                </delete>
                                                                <delete dir="${old.troja.stage.p2.target.dir}/.."/>
                                                            </then>
                                                            <else>
                                                                <echo message="Old build was not found at:'${old.troja.stage.p2.target.dir}'"/>
                                                            </else>
                                                        </if>
                                                    </then>
                                                    <else>
                                                        <echo message="Property 'old.troja.stage.p2.target.dir' was not set due a missing log file."/>
                                                    </else>
                                                </if>
                                            </then>
                                        </if>
                                        <!-- remove an existent repository directory -->
                                        <if>
                                            <available file="${troja.stage.p2.target.dir}" type="dir"/>
                                            <then>
                                                <delete includeemptydirs="true" failonerror="false">
                                                    <fileset includes="**/*" dir="${troja.stage.p2.target.dir}"/>
                                                </delete>
                                                <delete dir="${troja.stage.p2.target.dir}"/>
                                            </then>
                                        </if>
                                        
                                        <!-- deploy.generated.p2.to.composite.p2 -->
                                        <!-- create the repository directory and copy files from the generated 
											P2 -->
                                        <echo message="COPYING P2"/>
                                        <if>
                                            <available file="${troja.stage.p2.origin.dir}" type="dir"/>
                                            <then>
                                                <mkdir dir="${troja.stage.p2.target.dir}"/>
                                                <copy todir="${troja.stage.p2.target.dir}">
                                                    <fileset dir="${troja.stage.p2.origin.dir}" includes="**/*"/>
                                                </copy>
                                                <if>
                                                    <equals arg1="${troja.stage.p2.keep.old}" arg2="false"/>
                                                    <then>
                                                        <propertyfile file="${troja.stage.p2.log.file.path}" comment="Building log for ${troja.build.eclipse.platform.name} - ${troja.build.branch}">
                                                            <entry key="build.counter" type="int" default="0" operation="+"/>
                                                            <entry key="build.date" type="date" value="now"/>
                                                            <entry key="troja.stage.artifact.version" value="${troja.stage.artifact.version}"/>
                                                            <entry key="troja.stage.p2.target.dir" value="${troja.stage.p2.target.dir}"/>
                                                        </propertyfile>
                                                    </then>
                                                    <else>
                                                        <propertyfile file="${troja.stage.p2.log.file.path}" comment="Building log for ${troja.build.eclipse.platform.name} - ${troja.build.branch}">
                                                            <entry key="build.counter" type="int" default="0" operation="+"/>
                                                            <entry key="build.date" type="date" value="now"/>
                                                            <entry key="troja.build.local.federated.p2.dir" value="${troja.build.local.federated.p2.dir}"/>
                                                            <entry key="troja.stage.artifact.versions" default="" operation="+" value=",${troja.stage.artifact.version}"/>
                                                        </propertyfile>
                                                    </else>
                                                </if>
                                            </then>
                                            <else>
                                                <fail message="The P2 repository was not generated in '${troja.stage.p2.origin.dir}' !"/>
                                            </else>
                                        </if>
                                        
                                        <!-- start rebuilding... -->
                                        <echo message="Rebuilding Federated Repository !!!"/>
                                        <echo message=" (troja.build.local.federated.p2.dir): ${troja.build.local.federated.p2.dir}"/>
                                        
                                        <dirset id="dirs" dir="${troja.build.local.federated.p2.dir}" includes="*/*"/>
                                        
                                        <fail message="There is no repositories to process !">
                                            <condition>
                                                <resourcecount when="equal" count="0" refid="dirs"/>
                                            </condition>
                                        </fail>
                                        
                                        <if>
                                            <available file="${troja.build.local.federated.p2.dir}compositeContent.xml" type="file"/>
                                            <then>
                                                <echo message="DELETED OLD CONTENT FILE"/>
                                                <delete file="${troja.build.local.federated.p2.dir}compositeContent.xml"/>
                                            </then>
                                        </if>
                                        <if>
                                            <available file="${troja.build.local.federated.p2.dir}compositeArtifacts.xml" type="file"/>
                                            <then>
                                                <echo message="DELETED OLD ARTIFACTS FILE"/>
                                                <delete file="${troja.build.local.federated.p2.dir}compositeArtifacts.xml"/>
                                            </then>
                                        </if>
                                        
                                        <!-- generate.composite.p2.add.compositeContentFile -->
                                        <xmltask source="${compositeContentFile}" destbuffer="bufferCompositeContent" report="true"/>
                                        <var name="counterContent" value="0"/>
                                        <for param="child" list="${toString:dirs}" delimiter=";">
                                            <sequential>
                                                <math result="counterContent" operand1="${counterContent}" operand2="1" operation="+" datatype="int"/>
                                                <echo message="Adding Content Child @{child} - ${counterContent}"/>
                                                <xmltask sourcebuffer="bufferCompositeContent" destbuffer="bufferCompositeContent">
                                                    <insert path="/repository/children">
                                                        &lt;child location='@{child}' /&gt; 
                                                    </insert>
                                                </xmltask>
                                            </sequential>
                                        </for>
                                        <xmltask sourcebuffer="bufferCompositeContent" destbuffer="bufferCompositeContent">
                                            <replace path="/repository/children/@size" withText="${counterContent}"/>
                                        </xmltask>
                                        
                                        <!-- generate.composite.p2.add.compositeArtifactsFile -->
                                        <xmltask source="${compositeArtifactsFile}" destbuffer="bufferCompositeArtifacts" report="true"/>
                                        <var name="counterArtifacts" value="0"/>
                                        <for param="child" list="${toString:dirs}" delimiter=";">
                                            <sequential>
                                                <math result="counterArtifacts" operand1="${counterArtifacts}" operand2="1" operation="+" datatype="int"/>
                                                <echo message="Adding Artifact Child @{child} - ${counterArtifacts}"/>
                                                <xmltask sourcebuffer="bufferCompositeArtifacts" destbuffer="bufferCompositeArtifacts">
                                                    <insert path="/repository/children">
                                                        &lt;child location='@{child}' /&gt; 
                                                    </insert>
                                                </xmltask>
                                            </sequential>
                                        </for>
                                        <xmltask sourcebuffer="bufferCompositeArtifacts" destbuffer="bufferCompositeArtifacts">
                                            <replace path="/repository/children/@size" withText="${counterArtifacts}"/>
                                        </xmltask>
                                        
                                        <!-- generate.composite.p2.add.p2.index.file -->
                                        <if>
                                            <not>
                                                <available file="${troja.build.local.federated.p2.dir}p2.index" type="file"/>
                                            </not>
                                            <then>
                                                <copy file="${p2indexFile}" todir="${troja.build.local.federated.p2.dir}"/>
                                            </then>
                                        </if>
                                        
                                        <!-- generate.composite.p2 -->
                                        <echo message="CREATE COMPOSITE ARTIFACTS"/>
                                        <xmltask sourcebuffer="bufferCompositeArtifacts" dest="${troja.build.local.federated.p2.dir}compositeArtifacts.xml"/>
                                        
                                        <echo message="CREATE COMPOSITE CONTENT"/>
                                        <xmltask sourcebuffer="bufferCompositeContent" dest="${troja.build.local.federated.p2.dir}compositeContent.xml"/>
                                        
                                        <!-- end generation -->
                                        
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <version>${groovy-all.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant</artifactId>
                                <version>1.8.4</version>
                            </dependency>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>1.0b3</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                            <dependency>
                                <groupId>net.sf.saxon</groupId>
                                <artifactId>Saxon-HE</artifactId>
                                <version>9.4</version>
                            </dependency>
                            <dependency>
	                            <groupId>oopsconsultancy</groupId>
								<artifactId>xmltask</artifactId>
								<version>1.16</version>
							</dependency>
							<dependency>
  								<groupId>org.apache.maven.plugins</groupId>
  								<artifactId>maven-antrun-plugin</artifactId>
  								<version>1.8</version>
							</dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
